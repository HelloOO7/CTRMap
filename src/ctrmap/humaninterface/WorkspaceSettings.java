package ctrmap.humaninterface;

import static ctrmap.CtrmapMainframe.*;
import ctrmap.Workspace;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 * Workspace configuration GUI.
 */
public class WorkspaceSettings extends javax.swing.JFrame {

	private String originWSPath;
	private String originGamePath;
	private String originSpicaPath;
	private String originTilesetPath;

	/**
	 * Creates new form WorkspaceSettings
	 */
	public WorkspaceSettings() {
		initComponents();
		this.addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent e) {
				if (wsPathField.getText().equals(originWSPath) && gameField.getText().equals(originGamePath) && spicaField.getText().equals(originSpicaPath)) {
					if (originTilesetPath.equals(btnTilesetDefault.isSelected() ? "Default" : tilesetPath.getText())) {
						return;
					}
				}
				if (JOptionPane.showConfirmDialog(e.getComponent(), "Do you want to save the new settings?", "Save settings?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
					save();
				}
			}
		});
		wsPathField.setText(Workspace.WORKSPACE_PATH);
		gameField.setText(Workspace.GAMEDIR_PATH);
		spicaField.setText(Workspace.ESPICA_PATH);
		tilesetPath.setText(Workspace.TILESET_PATH);
		tilesetPath.setEnabled(!Workspace.TILESET_DEFAULT);
		btnTilesetDefault.setSelected(Workspace.TILESET_DEFAULT);
		btnTilesetCustom.setSelected(!Workspace.TILESET_DEFAULT); //otherwise both remain unselected if custom
		originWSPath = wsPathField.getText();
		originGamePath = gameField.getText();
		originSpicaPath = spicaField.getText();
		originTilesetPath = (btnTilesetDefault.isSelected() ? "Default" : tilesetPath.getText());
	}

	public void save() {
		Workspace.WORKSPACE_PATH = wsPathField.getText();
		Workspace.ESPICA_PATH = spicaField.getText();
		Workspace.TILESET_DEFAULT = btnTilesetDefault.isSelected();
		Workspace.TILESET_PATH = tilesetPath.getText();
		if (!gameField.getText().equals(originGamePath)) { //may have switched from XY to AlphaOmega etc., so it's better to clean up to prevent injecting wrong game files
			int res = JOptionPane.showConfirmDialog(null, "Game path has been changed. To prevent cross-injecting, the workspace will be cleaned.\n"
					+ "Do you wish to commit your changes to the game data beforehand? \nUncommited data will be lost on cleanup.", "State change warning", JOptionPane.YES_NO_CANCEL_OPTION);
			switch (res) {
				case JOptionPane.YES_OPTION:
					Workspace.packWorkspace();
				case JOptionPane.NO_OPTION:
					Workspace.GAMEDIR_PATH = gameField.getText();
					Workspace.cleanAndReload();
					break;
				case JOptionPane.CANCEL_OPTION:
					return; //interrupt the saving process
			}
		}
		Workspace.validate(this);
		originWSPath = wsPathField.getText();
		originGamePath = gameField.getText();
		originSpicaPath = spicaField.getText();
		originTilesetPath = (btnTilesetDefault.isSelected() ? "Default" : tilesetPath.getText());
		mTileEditForm.tileset = Workspace.getTileset();
		mTileMapPanel.updateAll();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tilesetBtnGroup = new javax.swing.ButtonGroup();
        wsLabel = new javax.swing.JLabel();
        wsPathField = new javax.swing.JTextField();
        gameLabel = new javax.swing.JLabel();
        gameField = new javax.swing.JTextField();
        btnSetWS = new javax.swing.JButton();
        btnSetGame = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        tilesetLabel = new javax.swing.JLabel();
        btnTilesetDefault = new javax.swing.JRadioButton();
        btnTilesetCustom = new javax.swing.JRadioButton();
        btnSetTileset = new javax.swing.JButton();
        tilesetPath = new javax.swing.JTextField();
        spicaLabel = new javax.swing.JLabel();
        spicaField = new javax.swing.JTextField();
        btnSetSpica = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Workspace settings");
        setResizable(false);

        wsLabel.setText("Workspace path");

        gameLabel.setText("RomFS path");

        btnSetWS.setText("Browse");
        btnSetWS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetWSActionPerformed(evt);
            }
        });

        btnSetGame.setText("Browse");
        btnSetGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetGameActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        tilesetLabel.setText("Tileset");

        tilesetBtnGroup.add(btnTilesetDefault);
        btnTilesetDefault.setText("Default");
        btnTilesetDefault.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTilesetDefaultActionPerformed(evt);
            }
        });

        tilesetBtnGroup.add(btnTilesetCustom);
        btnTilesetCustom.setText("Custom");
        btnTilesetCustom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTilesetCustomActionPerformed(evt);
            }
        });

        btnSetTileset.setText("Browse");
        btnSetTileset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetTilesetActionPerformed(evt);
            }
        });

        spicaLabel.setText("ESPICA path:");

        btnSetSpica.setText("Browse");
        btnSetSpica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetSpicaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(gameLabel)
                                    .addComponent(wsLabel)
                                    .addComponent(tilesetLabel))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(tilesetPath)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnSetTileset))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(wsPathField, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnSetWS))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(gameField, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnSetGame))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnTilesetDefault)
                                        .addGap(27, 27, 27)
                                        .addComponent(btnTilesetCustom))))
                            .addComponent(btnSave, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(spicaLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(spicaField, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSetSpica)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wsPathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wsLabel)
                    .addComponent(btnSetWS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gameLabel)
                    .addComponent(btnSetGame))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spicaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spicaLabel)
                    .addComponent(btnSetSpica))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTilesetDefault)
                    .addComponent(btnTilesetCustom)
                    .addComponent(tilesetLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tilesetPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSetTileset))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSetWSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetWSActionPerformed
		JFileChooser jfc = new JFileChooser(wsPathField.getText());
		jfc.setMultiSelectionEnabled(false);
		jfc.setDialogTitle("Select a workspace directory");
		jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		jfc.showOpenDialog(this);
		if (jfc.getSelectedFile() != null) {
			wsPathField.setText(jfc.getSelectedFile().getAbsolutePath());
		}
    }//GEN-LAST:event_btnSetWSActionPerformed

    private void btnSetGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetGameActionPerformed
		JFileChooser jfc = new JFileChooser(gameField.getText());
		jfc.setMultiSelectionEnabled(false);
		jfc.setDialogTitle("Select game RomFS directory");
		jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		jfc.showOpenDialog(this);
		if (jfc.getSelectedFile() != null) {
			gameField.setText(jfc.getSelectedFile().getAbsolutePath());
		}
    }//GEN-LAST:event_btnSetGameActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
		save();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnTilesetDefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTilesetDefaultActionPerformed
		setCustom(false);
    }//GEN-LAST:event_btnTilesetDefaultActionPerformed

    private void btnTilesetCustomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTilesetCustomActionPerformed
		setCustom(false);
    }//GEN-LAST:event_btnTilesetCustomActionPerformed

    private void btnSetTilesetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetTilesetActionPerformed
		btnTilesetCustom.setSelected(true);
		setCustom(true);
    }//GEN-LAST:event_btnSetTilesetActionPerformed

    private void btnSetSpicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetSpicaActionPerformed
		JFileChooser jfc = new JFileChooser(tilesetPath.getText());
		jfc.setMultiSelectionEnabled(false);
		jfc.setDialogTitle("Locate ESPICA executable");
		jfc.setFileSelectionMode(JFileChooser.FILES_ONLY);
		jfc.showOpenDialog(this);
		if (jfc.getSelectedFile() != null) {
			spicaField.setText(jfc.getSelectedFile().getAbsolutePath());
		}
    }//GEN-LAST:event_btnSetSpicaActionPerformed

	public void setCustom(boolean forceDialog) {
		if (btnTilesetDefault.isSelected()) {
			tilesetPath.setEnabled(false);
		} else {
			tilesetPath.setEnabled(true);
			File f = new File(tilesetPath.getText());
			if (!f.exists() || forceDialog) {
				File newFile = openTilesetFileDialog();
				if (newFile != null) {
					tilesetPath.setText(newFile.getPath());
				} else {
					btnTilesetDefault.setSelected(true);
					tilesetPath.setEnabled(false);
					btnSetTileset.setEnabled(true);
				}
			}
		}
	}

	public File openTilesetFileDialog() {
		JFileChooser jfc = new JFileChooser(tilesetPath.getText());
		jfc.setMultiSelectionEnabled(false);
		jfc.setDialogTitle("Select a tileset file");
		jfc.setFileSelectionMode(JFileChooser.FILES_ONLY);
		jfc.showOpenDialog(this);
		return jfc.getSelectedFile();
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(WorkspaceSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(() -> {
			new WorkspaceSettings().setVisible(true);
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSetGame;
    private javax.swing.JButton btnSetSpica;
    private javax.swing.JButton btnSetTileset;
    private javax.swing.JButton btnSetWS;
    private javax.swing.JRadioButton btnTilesetCustom;
    private javax.swing.JRadioButton btnTilesetDefault;
    private javax.swing.JTextField gameField;
    private javax.swing.JLabel gameLabel;
    private javax.swing.JTextField spicaField;
    private javax.swing.JLabel spicaLabel;
    private javax.swing.ButtonGroup tilesetBtnGroup;
    private javax.swing.JLabel tilesetLabel;
    private javax.swing.JTextField tilesetPath;
    private javax.swing.JLabel wsLabel;
    private javax.swing.JTextField wsPathField;
    // End of variables declaration//GEN-END:variables
}
