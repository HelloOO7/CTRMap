package ctrmap.humaninterface;

import static ctrmap.CtrmapMainframe.*;
import ctrmap.Workspace;
import ctrmap.formats.containers.ZO;
import ctrmap.formats.cameradata.CameraDataFile;
import ctrmap.formats.mapmatrix.MapMatrix;
import ctrmap.formats.text.LocationNames;
import ctrmap.formats.zone.Zone;
import ctrmap.formats.zone.ZoneEntities;
import javax.swing.JFormattedTextField;
import javax.swing.SwingWorker;
import javax.swing.text.NumberFormatter;

public class ZoneDebugPanel extends javax.swing.JPanel {

	/**
	 * Creates new form ZoneDebugPanel
	 */
	public Zone[] zones;
	public Zone zone;
	private boolean loaded = false;

	public ZoneDebugPanel() {
		initComponents();
		setIntValueClass(new JFormattedTextField[]{cam1, cam2, camFlags, OLValue, unknownFlags});
	}

	public void loadZone(Zone z) {
		loaded = false;
		if (zone != null){
			zone.header.freeArchives();
			System.gc();
		}
		zone = z;
		OLValue.setValue(z.header.OLvalue);
		cam1.setValue(z.header.camera1);
		cam2.setValue(z.header.camera2);
		camFlags.setValue(z.header.cameraFlags);
		coords1.setValue(z.header.X + "/" + z.header.Y + "/" + z.header.Z);
		coords2.setValue(z.header.X2 + "/" + z.header.Y2 + "/" + z.header.Z2);
		unknownFlags.setValue(z.header.unknownFlags);
		unknownFlag.setSelected(z.header.unknownFlag);
		loaded = true;
	}

	public void loadEverything() {
		LoadingDialog progress = LoadingDialog.makeDialog("Loading Zone data");
		SwingWorker worker = new SwingWorker() {
			@Override
			protected void done() {
				progress.close();
			}

			@Override
			protected Object doInBackground() {
				loaded = false;
				zoneList.setSelectedIndex(-1);
				zoneList.removeAllItems();
				int totalZones = mWorkspace.getArchive(Workspace.ArchiveType.ZONE_DATA).entries.size();
				totalZones -= (mWorkspace.game == Workspace.GameType.XY) ? 1 : 2;
				zones = new Zone[totalZones]; //last file is not a ZO
				for (int i = 0; i < totalZones; i++) {
					zones[i] = new Zone(new ZO(mWorkspace.getWorkspaceFile(Workspace.ArchiveType.ZONE_DATA, i)));
					for (int j = 0; j < zones[i].entities.NPCCount; j++) {
						if (zones[i].entities.npcs.get(j).movePerm1 == 0) {
							continue;
						}
						ZoneEntities.NPC npc = zones[i].entities.npcs.get(j);
					}
					zoneList.addItem(LocationNames.getLocName(zones[i].header.parentMap) + " - " + i);
					progress.setBarPercent((int) ((float) i / totalZones * 100));
				}
				loaded = true;
				return null;
			}
		};
		worker.execute();
		progress.show();
	}

	public boolean store(boolean dialog) {
		if (zone == null) return true;
		zone.header.OLvalue = (Integer) OLValue.getValue();
		zone.header.camera1 = (Integer) cam1.getValue();
		zone.header.camera2 = (Integer) cam2.getValue();
		zone.header.cameraFlags = (Integer) camFlags.getValue();
		zone.header.unknownFlags = (Integer) unknownFlags.getValue();
		zone.header.unknownFlag = unknownFlag.isSelected();
		mNPCEditForm.saveEntry();
		return zone.store(dialog);
	}

	public void setIntValueClass(JFormattedTextField[] fields) {
		for (int i = 0; i < fields.length; i++) {
			((NumberFormatter) fields[i].getFormatter()).setValueClass(Integer.class);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        camFlags = new javax.swing.JFormattedTextField();
        OLValue = new javax.swing.JFormattedTextField();
        btnSave = new javax.swing.JButton();
        cam1label = new javax.swing.JLabel();
        cam2label = new javax.swing.JLabel();
        camFlagsLabel = new javax.swing.JLabel();
        coordsLabel5 = new javax.swing.JLabel();
        coordsLabel6 = new javax.swing.JLabel();
        coords2 = new javax.swing.JFormattedTextField();
        cam1 = new javax.swing.JFormattedTextField();
        cam2 = new javax.swing.JFormattedTextField();
        coords1 = new javax.swing.JFormattedTextField();
        olLabel = new javax.swing.JLabel();
        uFlabel = new javax.swing.JLabel();
        unknownFlags = new javax.swing.JFormattedTextField();
        unknownFlag = new javax.swing.JCheckBox();
        zoneList = new javax.swing.JComboBox<>();
        loadZoneLabel = new javax.swing.JLabel();

        camFlags.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        OLValue.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        OLValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OLValueActionPerformed(evt);
            }
        });

        btnSave.setText("Attempt to save (no sanity checks, debug only)");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        cam1label.setText("Camera1");

        cam2label.setText("Camera2");

        camFlagsLabel.setText("CameraFlags");

        coordsLabel5.setText("Coordinates 1");

        coordsLabel6.setText("Coordinates 2");

        cam1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        cam2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        olLabel.setText("OLValue");

        uFlabel.setText("UnknownFlags");

        unknownFlags.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        unknownFlag.setText("UnknownFlag");

        zoneList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoneListActionPerformed(evt);
            }
        });

        loadZoneLabel.setText("Load Zone");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(uFlabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(unknownFlags))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(coordsLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(coords1, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(coordsLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(coords2))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(camFlagsLabel)
                                .addGap(15, 15, 15)
                                .addComponent(camFlags))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cam1label)
                                    .addComponent(olLabel)
                                    .addComponent(cam2label))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cam1)
                                    .addComponent(OLValue)
                                    .addComponent(cam2, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(unknownFlag))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(loadZoneLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(zoneList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(btnSave, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(529, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(olLabel)
                    .addComponent(OLValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unknownFlag))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cam1label)
                    .addComponent(cam1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cam2label)
                    .addComponent(cam2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(camFlagsLabel)
                    .addComponent(camFlags, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coordsLabel5)
                    .addComponent(coords1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coordsLabel6)
                    .addComponent(coords2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(unknownFlags, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(uFlabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zoneList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loadZoneLabel))
                .addContainerGap(53, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void OLValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OLValueActionPerformed
		// TODO add your handling code here:
    }//GEN-LAST:event_OLValueActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
		store(false);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void zoneListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoneListActionPerformed
		if (zoneList.getSelectedIndex() != -1 && loaded) {
			if (mCamEditForm.store(true) && mTileMapPanel.saveTileMap(true) && mPropEditForm.store(true) && mNPCEditForm.saveRegistry(true) && store(true)) {
				LoadingDialog progress = LoadingDialog.makeDialog("Loading zone");
				SwingWorker worker = new SwingWorker() {
					@Override
					protected void done() {
						progress.close();
					}

					@Override
					protected Object doInBackground() {
						mCamEditForm.store(true);
						progress.setBarPercent(20);
						Zone z = zones[zoneList.getSelectedIndex()];
						loadZone(z);
						progress.setBarPercent(50);
						z.header.fetchArchives();
						progress.setBarPercent(100);
						mTileMapPanel.loadMatrix(new MapMatrix(z.header.mapmatrix), z.header.worldTextures, z.header.propTextures);
						mCamEditForm.loadDataFile(new CameraDataFile(z.header.areadata));
						mNPCEditForm.loadFromEntities(z.entities, z.header.npcreg);
						return null;
					}
				};
				worker.execute();
				progress.show();
			}
		}
    }//GEN-LAST:event_zoneListActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField OLValue;
    private javax.swing.JButton btnSave;
    private javax.swing.JFormattedTextField cam1;
    private javax.swing.JLabel cam1label;
    private javax.swing.JFormattedTextField cam2;
    private javax.swing.JLabel cam2label;
    private javax.swing.JFormattedTextField camFlags;
    private javax.swing.JLabel camFlagsLabel;
    private javax.swing.JFormattedTextField coords1;
    private javax.swing.JFormattedTextField coords2;
    private javax.swing.JLabel coordsLabel5;
    private javax.swing.JLabel coordsLabel6;
    private javax.swing.JLabel loadZoneLabel;
    private javax.swing.JLabel olLabel;
    private javax.swing.JLabel uFlabel;
    private javax.swing.JCheckBox unknownFlag;
    private javax.swing.JFormattedTextField unknownFlags;
    private javax.swing.JComboBox<String> zoneList;
    // End of variables declaration//GEN-END:variables
}
