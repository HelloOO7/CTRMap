package ctrmap.humaninterface;

import ctrmap.resources.ResourceAccess;
import ctrmap.Workspace;
import ctrmap.formats.containers.AD;
import ctrmap.formats.zone.Zone;
import java.io.File;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 */
public class ExtrasPanel extends javax.swing.JPanel {

	/**
	 * Creates new form ExtrasPanel
	 */
	private ZoneLoadingPanel parent;

	public ExtrasPanel(ZoneLoadingPanel zoneContainer) {
		initComponents();
		parent = zoneContainer;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        freecam = new javax.swing.JButton();
        freecamReg = new javax.swing.JButton();
        freecamTitleLabel = new javax.swing.JLabel();
        btn3d = new javax.swing.JButton();

        freecam.setText("Inject dummy camera collisions");
        freecam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freecamActionPerformed(evt);
            }
        });

        freecamReg.setText("Set camera flags + Zone failsafes");
        freecamReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freecamRegActionPerformed(evt);
            }
        });

        freecamTitleLabel.setText("Free camera mod (DANGER)");

        btn3d.setText("Enable stereoscopic 3D");
        btn3d.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3dActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(freecamTitleLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btn3d, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(freecam, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(freecamReg)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(freecamTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(freecam)
                    .addComponent(freecamReg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn3d)
                .addContainerGap(217, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void freecamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freecamActionPerformed
		byte[] ad7 = ResourceAccess.getByteArray("DummyLumioseCollision.bin");
		for (int i = 0; i < Workspace.getArchive(Workspace.ArchiveType.AREA_DATA).length - (Workspace.isOA() ? 2 : 1); i++) {
			AD ad = new AD(Workspace.getWorkspaceFile(Workspace.ArchiveType.AREA_DATA, i));
			ad.storeFile(7, ad7);
		}
    }//GEN-LAST:event_freecamActionPerformed

    private void freecamRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freecamRegActionPerformed
		Zone[] zones = parent.zones;
		if (zones != null) {
			for (int i = 0; i < zones.length; i++) {
				zones[i].header.enableRollerSkates = true;
				zones[i].header.enableEscapeRope = true;
				zones[i].header.enableFlyFrom = true;
				zones[i].header.enableRunning = true;
				zones[i].header.enableCycling = Workspace.isXY(); //Cycling softlocks the game even on emulators
				zones[i].store(false);
			}
		}

		File f170 = Workspace.isXY() ? Workspace.getWorkspaceFile(Workspace.ArchiveType.AREA_DATA, 170)
				: Workspace.getWorkspaceFile(Workspace.ArchiveType.AREA_DATA, 228);
		try {
			RandomAccessFile raf = new RandomAccessFile(f170, "rw");
			int skip = Workspace.isXY() ? 0x14 : 0x1c;
			while (raf.getFilePointer() + 0xf < raf.length()) {
				raf.skipBytes(0xf);
				raf.write(1);
				raf.skipBytes(skip);
			}
			raf.close();
			Workspace.addPersist(f170);
		} catch (IOException ex) {
			Logger.getLogger(ZoneLoadingPanel.class.getName()).log(Level.SEVERE, null, ex);
		}
    }//GEN-LAST:event_freecamRegActionPerformed

    private void btn3dActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3dActionPerformed
		Zone[] zones = parent.zones;

		if (zones != null) {
			for (int i = 0; i < zones.length; i++) {
				zones[i].header.enable3D = true;
				zones[i].store(false);
			}
		}

		File f170 = Workspace.isXY() ? Workspace.getWorkspaceFile(Workspace.ArchiveType.AREA_DATA, 170)
				: Workspace.getWorkspaceFile(Workspace.ArchiveType.AREA_DATA, 228);
		try {
			RandomAccessFile raf = new RandomAccessFile(f170, "rw");
			int skip = Workspace.isXY() ? 0x19 : 0x21;
			while (raf.getFilePointer() + 0xa < raf.length()) {
				raf.skipBytes(0xa);
				raf.write(0x2c);
				raf.skipBytes(skip);
			}
			raf.close();
			Workspace.addPersist(f170);
		} catch (IOException ex) {
			Logger.getLogger(ZoneLoadingPanel.class.getName()).log(Level.SEVERE, null, ex);
		}
    }//GEN-LAST:event_btn3dActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn3d;
    private javax.swing.JButton freecam;
    private javax.swing.JButton freecamReg;
    private javax.swing.JLabel freecamTitleLabel;
    // End of variables declaration//GEN-END:variables
}
